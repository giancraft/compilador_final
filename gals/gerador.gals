#Options
GenerateScanner = true
GenerateParser = true
Language = Java
ScannerName = Lexico
ParserName = Sintatico
SemanticName = Semantico
ScannerCaseSensitive = true
ScannerTable = Full
Input = Stream
Parser = SLR
#RegularDefinitions
letras: [a-zA-Z]
numeros: [0-9]
float: [0-9]+\.[0-9]+
char: '[^']'  
espaco: [\ \n\r\t\s]
caracteres_especiais: [^a-zA-Z0-9\s]


#Tokens
CONST: {numeros}+
DECIMAL: {float}
CARAC: {char}
ATR: "="
NEGACAO: "!"
ABRE_PAR: "("
FECHA_PAR: ")"
ABRE_COL: "["
FECHA_COL: "]"
ABRE_CHAVES: "{"
FECHA_CHAVES: "}"
ASPAS: "'"
PONTO: "."
PV: ";"
VIRGULA: ","
DEC: "var" | "VAR"
INT: "int"
CHAR: "char"
FLOAT: "float"
ARRAY: "array"
COMP: "=="
DIF: "!="
MAIOR: ">"
MENOR: "<"
MAIORIGUAL: ">="
MENORIGUAL: "<="
SOMA: "+"
SUBTRACAO: "-"
DIVISAO: "/"
MULTIPLICACAO: "*"
MODULO: "%"
IF: "se" | "SE"
ELSE: "senao" | "SENAO"
WHILE: "enquanto" | "ENQUANTO"
FOR: "para" | "PARA"
DO: "faca" | "FACA"
PRINT: "imprima" | "IMPRIMA"
READ: "leia" | "LEIA"
WRITE: "escreva" | "ESCREVA"
PROGRAM: "programa" | "PROGRAMA"
RETURN: "retorno" | "RETORNO"
FUNCTION: "funcao" | "FUNCAO"
ID: {letras}({letras}|{numeros})*
: {espaco}

#NonTerminals
<PROGRAMA>
<VAR>
<VARS>
<TIPO>
<COMANDO>
<COMANDOS>
<ATRIBUICAO>
<LEITURA>
<IMPRESSAO>
<RETORNO>
<CHAMADA_FUNCAO>
<IF>
<FOR>
<WHILE>
<EXPRESSAO>
<EXPRESSAO_PRIMARIA>
<OPERADORES_PRIMARIOS>
<OPERADOR_LOGICO>
<OPERADORES_SECUNDARIOS>
<TERMO>
<TERMO_PRIMARIO>
<FATOR>
<CONDICAO>
<LISTA_ARGUMENTOS>
<LISTA_ARGUMENTOS_REST>
<EXPRESSAO_REST>
<TERMO_REST>
<OPERADOR_ARITMETICO>
<PARAMETROS>
<INCREMENTA>
#Grammar
<PROGRAMA> ::= PROGRAM ABRE_PAR <VARS> FECHA_PAR ABRE_CHAVES <COMANDOS> FECHA_CHAVES;

<VARS> ::= <PARAMETROS> <VARS> | î;

<VAR> ::= <TIPO> ID PV | <TIPO> <ATRIBUICAO>;

<TIPO> ::= INT | CHAR | FLOAT | ARRAY;

<COMANDOS> ::= <COMANDO> <COMANDOS> | î;

<COMANDO> ::= <ATRIBUICAO> 
	   | <VAR>
            | <LEITURA> 
            | <IMPRESSAO> 
            | <RETORNO> 
            | <CHAMADA_FUNCAO> 
            | <IF> 
            | <FOR> 
            | <WHILE>;

<ATRIBUICAO> ::= ID ATR <EXPRESSAO> PV;

<LEITURA> ::= READ ABRE_PAR ID FECHA_PAR PV;

<IMPRESSAO> ::= PRINT ABRE_PAR <EXPRESSAO> FECHA_PAR PV;

<RETORNO> ::= RETURN <EXPRESSAO> PV;

<CHAMADA_FUNCAO> ::= FUNCTION <TIPO> ID ABRE_PAR <VARS> FECHA_PAR ABRE_CHAVES <COMANDOS> <RETORNO> FECHA_CHAVES;

<LISTA_ARGUMENTOS> ::= <EXPRESSAO> <LISTA_ARGUMENTOS_REST> | î;

<LISTA_ARGUMENTOS_REST> ::= VIRGULA <EXPRESSAO> <LISTA_ARGUMENTOS_REST> | î;

<IF> ::= IF ABRE_PAR <EXPRESSAO> FECHA_PAR ABRE_CHAVES <COMANDOS> FECHA_CHAVES 
        | IF ABRE_PAR <EXPRESSAO> FECHA_PAR ABRE_CHAVES <COMANDOS> FECHA_CHAVES ELSE ABRE_CHAVES <COMANDOS> FECHA_CHAVES;

<FOR> ::= FOR ABRE_PAR <ATRIBUICAO> <CONDICAO> PV <INCREMENTA> FECHA_PAR ABRE_CHAVES <COMANDOS> FECHA_CHAVES;

<CONDICAO> ::= <EXPRESSAO>;

<WHILE> ::= WHILE ABRE_PAR <EXPRESSAO> FECHA_PAR ABRE_CHAVES <COMANDOS> FECHA_CHAVES;

<EXPRESSAO> ::= <TERMO> <EXPRESSAO_REST>;

<EXPRESSAO_REST> ::= <OPERADOR_LOGICO> <TERMO> | î;

<OPERADOR_LOGICO> ::= COMP | DIF | MENOR | MAIOR | MENORIGUAL | MAIORIGUAL;

<TERMO> ::= <FATOR> <TERMO_REST>;

<TERMO_REST> ::= <OPERADOR_ARITMETICO> <FATOR> | î;

<OPERADOR_ARITMETICO> ::= SOMA | SUBTRACAO | MULTIPLICACAO | DIVISAO | MODULO;

<FATOR> ::= ID | CONST | ABRE_PAR <EXPRESSAO> FECHA_PAR | DECIMAL | CARAC;

<PARAMETROS> ::= <TIPO> ID VIRGULA | <TIPO> ID;

<INCREMENTA> ::= ID ATR ID <OPERADOR_ARITMETICO> CONST |  ID ATR ID <OPERADOR_ARITMETICO> ID;

